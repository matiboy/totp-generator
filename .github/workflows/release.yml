name: Cross-Compile and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu       # modern Pi (64-bit)
          - armv7-unknown-linux-gnueabihf   # Pi 2/3/4 32-bit
          - x86_64-pc-windows-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross

      - name: Build with Cross
        run: cross build --release --target ${{ matrix.target }}

      - name: Prepare Artifact
        run: |
          mkdir -p dist
          BIN=totp-generator
          [[ "${{ matrix.target }}" == *"windows"* ]] && BIN="$BIN.exe"
          cp target/${{ matrix.target }}/release/$BIN dist/${BIN}-${{ matrix.target }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - aarch64-apple-darwin
          - x86_64-apple-darwin

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare Artifact
        run: |
          mkdir -p dist
          BIN=totp-generator
          cp target/${{ matrix.target }}/release/$BIN dist/${BIN}-${{ matrix.target }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
